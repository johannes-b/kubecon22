apiVersion: apps/v1
kind: Deployment
metadata:
  name: fib3r
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: fib3r
  template:
    metadata:
      labels:
        app: fib3r
        app.kubernetes.io/name: {{ .Values.keptn.service }}
        app.kubernetes.io/instance: "{{ .Values.keptn.service }}-{{ .Values.keptn.deployment }}"
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
        app.kubernetes.io/version: {{ (split ":" .Values.image)._1 | default "latest" }}
    spec:
      containers:
        - name: fib3r
          image: "{{ .Values.image }}"
          args:
            - flagd
          imagePullPolicy: "Always"
          ports:
            - containerPort: 30000
          env:
            - name: DT_CUSTOM_PROP
              value: "keptn_project={{ .Values.keptn.project }} keptn_service={{ .Values.keptn.service }} keptn_stage={{ .Values.keptn.stage }} keptn_deployment={{ .Values.keptn.deployment }}"
            - name: SERVICE_NAME
              value: "{{ .Values.keptn.service }}-{{ .Values.keptn.stage }}"
            - name: ENVIRONMENT
              value: "{{ .Values.keptn.stage }}"
            - name: OTEL_EXPORTER_JAEGER_AGENT_HOST
              value: "jaeger-agent.jaeger.svc.cluster.local"
            - name: OTEL_EXPORTER_JAEGER_AGENT_PORT
              value: "6832"
            - name: OTEL_SERVICE_NAME
              value: "{{ .Values.keptn.service }}-{{ .Values.keptn.stage }}"
            - name: FIB_SERVICE_URL
              value: "http://fibonacci.fibonacci-{{ .Values.keptn.stage }}.svc.cluster.local:30001"
            - name: FIB_SERVICE_USER
              value: "my-fib3r-user"
            - name: FIB_SERVICE_PASS
              value: "my-fib3r-password"
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
        - name: flagd
          image: ghcr.io/open-feature/flagd:v0.2.4
          args: ["start", "--uri", "/etc/flagd/config.json"]
          volumeMounts:
            - name: config-volume
              mountPath: /etc/flagd
      volumes:
        - name: config-volume
          configMap:
            name: feature-flags